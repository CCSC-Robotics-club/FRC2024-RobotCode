<!-- 5516 -->
<robotConfig>
    <system>
        <chassisModuleUpdateFrequency>128</chassisModuleUpdateFrequency>
    </system>
    <hardware>
        <chassisOnCanivore>0</chassisOnCanivore>
        <frontLeftWheelDriveMotor type="int">8</frontLeftWheelDriveMotor>
        <frontLeftWheelSteerMotor type="int">7</frontLeftWheelSteerMotor>
        <frontLeftWheelSteerMotorReversed type="int">1</frontLeftWheelSteerMotorReversed>
        <frontLeftWheelEncoder type="int">12</frontLeftWheelEncoder>
        <frontLeftWheelSteerEncoderReversed type="int">0</frontLeftWheelSteerEncoderReversed>

        <frontRightWheelDriveMotor type="int">1</frontRightWheelDriveMotor>
        <frontRightWheelSteerMotor type="int">2</frontRightWheelSteerMotor>
        <frontRightWheelSteerMotorReversed type="int">1</frontRightWheelSteerMotorReversed>
        <frontRightWheelEncoder type="int">9</frontRightWheelEncoder>
        <frontRightWheelSteerEncoderReversed type="int">0</frontRightWheelSteerEncoderReversed>

        <backLeftWheelDriveMotor type="int">6</backLeftWheelDriveMotor>
        <backLeftWheelSteerMotor type="int">5</backLeftWheelSteerMotor>
        <backLeftWheelSteerMotorReversed type="int">1</backLeftWheelSteerMotorReversed>
        <backLeftWheelEncoder type="int">11</backLeftWheelEncoder>
        <backLeftWheelSteerEncoderReversed type="int">0</backLeftWheelSteerEncoderReversed>

        <backRightWheelDriveMotor type="int">3</backRightWheelDriveMotor>
        <backRightWheelSteerMotor type="int">4</backRightWheelSteerMotor>
        <backRightWheelSteerMotorReversed type="int">1</backRightWheelSteerMotorReversed>
        <backRightWheelEncoder type="int">10</backRightWheelEncoder>
        <backRightWheelSteerEncoderReversed type="int">0</backRightWheelSteerEncoderReversed>

        <gyroPort type="int">15</gyroPort>

        <!-- the zero position of encoders, to measure this value, turn the wheel to the direct front, and see the value of encoder.getRawSensorReading() -->
        <frontLeftWheelZeroPosition type = "double">0.711</frontLeftWheelZeroPosition>
        <frontRightWheelZeroPosition type = "double">1.90</frontRightWheelZeroPosition>
        <backLeftWheelZeroPosition type = "double">3.48</backLeftWheelZeroPosition>
        <backRightWheelZeroPosition type = "double">0.09</backRightWheelZeroPosition>
    </hardware>
    <chassis>
        <!-- all units are in meters -->
        <wheelDiameter type="double">0.1016</wheelDiameter>
        <wheelGearRatio type="double">8.14</wheelGearRatio>
        <encoderValuePerMotorRevolution type="double">2048</encoderValuePerMotorRevolution>

        <!-- PID coefficients for steer wheels -->
        <steerWheelErrorTolerance type = "double">1</steerWheelErrorTolerance> <!-- the amount of error to ignore, in degrees -->
        <steerWheelErrorStartDecelerate type = "double">60</steerWheelErrorStartDecelerate> <!-- the amount of error where the motors should try to correct using full motor speed, in degrees -->
        <steerWheelMaximumPower type = "double">0.65</steerWheelMaximumPower> <!-- use this value as the full speed -->
        <steerWheelMinimumPower type = "double">0.03</steerWheelMinimumPower> <!-- this is the minimum amount of motor speed needed to turn the steer, in percentage of the full speed -->
        <steerWheelFeedForwardTime type = "double">0</steerWheelFeedForwardTime>
<!--        <steerCorrectionPowerRateAtZeroWheelSpeed type="double">0.4</steerCorrectionPowerRateAtZeroWheelSpeed>-->
<!--        <steerCorrectionPowerFullWheelSpeed type="'double">0.4</steerCorrectionPowerFullWheelSpeed>-->
        <!-- here we disable smart steer PID -->
        <steerCorrectionPowerRateAtZeroWheelSpeed type="double">1</steerCorrectionPowerRateAtZeroWheelSpeed>
        <steerCorrectionPowerFullWheelSpeed type="'double">1</steerCorrectionPowerFullWheelSpeed>

        <!-- low speed mode -->
        <lowSpeedModeTranslationalCommandScale>0.75</lowSpeedModeTranslationalCommandScale>

        <!-- the configuration for wheel speed control system -->
        <maxDrivingEncoderVelocity type="double">220000</maxDrivingEncoderVelocity> <!-- the encoder velocity read from the wheel when the robot is motioning at full speed -->
        <driveWheelFrictionIntegrationWeight type="double">0</driveWheelFrictionIntegrationWeight> <!-- how fast the robot is adjusting itself according to the sensed friction -->
        <driveWheelVelocityTolerance type="double">0.28</driveWheelVelocityTolerance> <!-- the amount of error in speed tolerated by the system, in percentage TO THE DESIRED -->

        <driveWheelProportionGain type="double">0.7</driveWheelProportionGain>
        <driveWheelFrictionDefaultValue type="double">0.08</driveWheelFrictionDefaultValue> <!-- the preset friction value for the robot, the robot adjusts itself based on this initial value -->
        <driveWheelFeedForwardRate type="double">0.3</driveWheelFeedForwardRate> <!-- the proportional term, the amount of feed forward power when there is a 100% speed error -->
        <driveWheelFeedForwardDelay type="double">0</driveWheelFeedForwardDelay> <!-- the amount of delay of the speed-controlling system, in ms, which is the amount of time that the system will "think forward" -->

        <!-- profiled translational velocity controller -->
        <translationalTaskUpdatableRange type="double">0.2</translationalTaskUpdatableRange>
        <ignoredAccelerateTime type="double">0.1</ignoredAccelerateTime>
        <robotMaximumSpeed type="double">5</robotMaximumSpeed>
        <timeNeededToFullyAccelerate type="double">0.4</timeNeededToFullyAccelerate>
        <robotSpeedActivateSpeedControl type="double">10</robotSpeedActivateSpeedControl> // 0.1

        <!-- smart wheel speed control -->
        <wheelsPowerConstrain type="double">1.1</wheelsPowerConstrain>
        <rotationalSpeedMaxSacrifice type="double">0.3</rotationalSpeedMaxSacrifice>

        <timeLockRotationAfterRotationalInputStops>0.3</timeLockRotationAfterRotationalInputStops>
        <!-- the configuration for rotation controller -->
        <robotRotationalErrorTolerance type="double">3</robotRotationalErrorTolerance> <!-- in degrees -->
        <robotRotationalErrorStartDecelerate type="double">45</robotRotationalErrorStartDecelerate> <!-- in degrees -->
        <robotRotationMaximumCorrectionPower type="double">0.6</robotRotationMaximumCorrectionPower>
        <robotRotationMinimumCorrectionPower type="double">0.03</robotRotationMinimumCorrectionPower>
        <robotRotationFeedForwardTime type="double">0.25</robotRotationFeedForwardTime> <!-- in seconds -->

        <!-- position controller -->
        <robotPositionErrorTolerance type="double">0.025</robotPositionErrorTolerance> <!-- in meters -->
        <robotPositionErrorStartDecelerate type="double">0.5</robotPositionErrorStartDecelerate> <!-- in meters -->
        <robotPositionMaximumCorrectionPower type="double">0.8</robotPositionMaximumCorrectionPower>
        <robotPositionMinimumCorrectionPower type="double">0.03</robotPositionMinimumCorrectionPower>
        <robotPositionFeedForwardTime type="double">0.1</robotPositionFeedForwardTime> <!-- in seconds -->
        <errorToleranceAsCommandFinished>2</errorToleranceAsCommandFinished>

        <!-- the configuration of steer wheels -->
        <maxUnusedTime type="double">1</maxUnusedTime> <!-- the amount of time that the steer wheel will wait when not used until they go back to default position -->
        <defaultPosition type="double">90</defaultPosition> <!--to straight forward-->
        <minUsageSpeed type="double">0.02</minUsageSpeed>
    </chassis>

    <!-- robot module configs goes here -->
    <shooter>
        <shooterMotorEncoderTicksPerRevolution>2048</shooterMotorEncoderTicksPerRevolution>
        <speedControllerProportionGain>1.05</speedControllerProportionGain>
        <speedControllerFeedForwardGain>0.55</speedControllerFeedForwardGain>
        <speedControllerFrictionGain>0.02</speedControllerFrictionGain>
        <speedControllerFeedForwardDelay>0</speedControllerFeedForwardDelay>
        <speedControllerMaximumSpeed>6650</speedControllerMaximumSpeed>
        <speedControllerTimeNeededToAccelerateToMaxSpeed>0.8</speedControllerTimeNeededToAccelerateToMaxSpeed>
        <flyWheelSpeedErrorTolerance>0.05</flyWheelSpeedErrorTolerance>
        <shooter1Port>15</shooter1Port>
        <shooter2Port>16</shooter2Port>
        <shooter1Reversed>0</shooter1Reversed>
        <shooter2Reversed>0</shooter2Reversed>

        <!-- shooting lookup table -->

    </shooter>
    <intake>
        <intakeMotor1Port>13</intakeMotor1Port>
        <intakeMotor1Reversed>1</intakeMotor1Reversed>
        <intakeMotor2Port>14</intakeMotor2Port>
        <intakeMotor2Reversed>1</intakeMotor2Reversed>
<!--        <launchPower>0.75</launchPower>-->
<!--        <intakePower>0.65</intakePower>-->
<!--        <revertPower>-0.65</revertPower>-->
        <launchPower>0.6</launchPower>
        <intakePower>0.35</intakePower>
        <revertPower>-0.3</revertPower>
        <distanceSensorThreshold>30</distanceSensorThreshold>
        <splitTime>0.4</splitTime>
    </intake>
    <arm>
        <armMotorPort>25</armMotorPort>
        <!-- positive should be towards lower point -->
        <armMotorReversed>1</armMotorReversed>
        <armEncoderReversed>0</armEncoderReversed>

        <!-- calibrate by DCEncoderCalibration.java, the reading of: absolute position(radian), when arm is placed vertically -->
        <encoderZeroPositionRadians>5.854</encoderZeroPositionRadians>

        <!-- arm positions -->
        <position-DEFAULT>98</position-DEFAULT> <!-- 60 -->
        <position-INTAKE>108</position-INTAKE>
        <position-SHOOT_NOTE>98</position-SHOOT_NOTE>
        <position-SCORE_AMPLIFIER>0</position-SCORE_AMPLIFIER>

        <!-- software limit -->
        <lowerPositionLimit>-0.1</lowerPositionLimit>
        <upperPositionLimit>115</upperPositionLimit>

        <!-- arm PID -->
        <maximumPower>0.65</maximumPower>
        <errorStartDecelerate>35</errorStartDecelerate>
        <errorTolerance>1</errorTolerance>
        <feedForwardTime>0.06</feedForwardTime>
        <errorAccumulationProportion>0</errorAccumulationProportion>
        <maxAcceleration>180</maxAcceleration>
        <maxVelocity>150</maxVelocity>
        <inAdvanceTime>0.25</inAdvanceTime>
        <errorToleranceAsInPosition>4.5</errorToleranceAsInPosition>

        <!-- lookup table -->
        <encoderPosition0>0</encoderPosition0>
        <gravityTorque0>0.07</gravityTorque0>
        <!-- the upper balanced point -->
        <encoderPosition1>17</encoderPosition1>
        <gravityTorque1>0</gravityTorque1>
        <!-- midway between the upper balance point and the lower balance point  -->
        <encoderPosition2>40</encoderPosition2>
        <gravityTorque2>0.04</gravityTorque2>
        <!-- lower balance point (aka. default position) -->
        <encoderPosition3>62</encoderPosition3>
        <gravityTorque3>0</gravityTorque3>
        <!-- lowest position -->
        <encoderPosition4>115</encoderPosition4>
        <gravityTorque4>-0.05</gravityTorque4>
    </arm>

    <auto>
        <autoStageMaxAcceleration type="double">12</autoStageMaxAcceleration>
        <autoStageMaxVelocity type="double">6.5</autoStageMaxVelocity>
        <autoStageMaxAngularVelocity type="double">220</autoStageMaxAngularVelocity> <!-- in deg/s -->
    </auto>
    <!-- the config for xbox controller, currently using radio master in replace -->
    <control-RM_POCKET>
        <controllerPort type="int">0</controllerPort>
        <xAxisPort type="int">0</xAxisPort>
        <yAxisPort type="int">1</yAxisPort>
        <zAxisPort type="int">3</zAxisPort>

        <pilotControllerXAxisSensitivity type="int">100</pilotControllerXAxisSensitivity>
        <pilotControllerYAxisSensitivity type="int">120</pilotControllerYAxisSensitivity>
        <pilotControllerZAxisSensitivity type="int">-65</pilotControllerZAxisSensitivity>
        <!-- the minimum amount of stick input to respond to, in percentage -->
        <pilotStickThresholdWhenOtherAxisUnused>5</pilotStickThresholdWhenOtherAxisUnused>
        <pilotStickThresholdWhenOtherAxisFull>8</pilotStickThresholdWhenOtherAxisFull>
        <pilotTranslationalAxisExponent>1.6</pilotTranslationalAxisExponent>
        <pilotRotationalAxisExponent>2</pilotRotationalAxisExponent>

        <!-- key bindings -->
        <translationAutoPilotButton type="int">2</translationAutoPilotButton>
        <rotationAutoPilotButton type="int">1</rotationAutoPilotButton>
        <lockChassisButtonPort type="int">3</lockChassisButtonPort>
    </control-RM_POCKET>
    <control-RM_BOXER>
        <controllerPort type="int">0</controllerPort>
        <xAxisPort type="int">0</xAxisPort>
        <yAxisPort type="int">1</yAxisPort>
        <zAxisPort type="int">3</zAxisPort>

        <pilotControllerXAxisSensitivity type="int">100</pilotControllerXAxisSensitivity>
        <pilotControllerYAxisSensitivity type="int">120</pilotControllerYAxisSensitivity>
        <pilotControllerZAxisSensitivity type="int">-65</pilotControllerZAxisSensitivity>
        <!-- the minimum amount of stick input to respond to, in percentage -->
        <pilotStickThresholdWhenOtherAxisUnused>5</pilotStickThresholdWhenOtherAxisUnused>
        <pilotStickThresholdWhenOtherAxisFull>8</pilotStickThresholdWhenOtherAxisFull>
        <pilotTranslationalAxisExponent>1.6</pilotTranslationalAxisExponent>
        <pilotRotationalAxisExponent>2</pilotRotationalAxisExponent>

        <!-- key bindings -->
        <translationAutoPilotButton type="int">5</translationAutoPilotButton>
        <lockChassisButtonPort type="int">3</lockChassisButtonPort>
        <rotationAutoPilotButton type="int">4</rotationAutoPilotButton>
    </control-RM_BOXER>
    <control-JOYSTICK>
        <controllerPort type="int">1</controllerPort>
        <xAxisPort type="int">0</xAxisPort>
        <yAxisPort type="nt">1</yAxisPort>
        <zAxisPort type="int">2</zAxisPort>

        <pilotControllerXAxisSensitivity>80</pilotControllerXAxisSensitivity>
        <pilotControllerYAxisSensitivity>-100</pilotControllerYAxisSensitivity>
        <pilotControllerZAxisSensitivity>-40</pilotControllerZAxisSensitivity>
        <!-- the minimum amount of stick input to respond to, in percentage -->
        <pilotStickThresholdWhenOtherAxisUnused>8</pilotStickThresholdWhenOtherAxisUnused>
        <pilotStickThresholdWhenOtherAxisFull>12</pilotStickThresholdWhenOtherAxisFull>
        <pilotTranslationalAxisExponent>1.8</pilotTranslationalAxisExponent>
        <pilotRotationalAxisExponent>2</pilotRotationalAxisExponent>

        <translationAutoPilotButton type="int">11</translationAutoPilotButton>
        <lockChassisButtonPort type="int">4</lockChassisButtonPort>
        <rotationAutoPilotButton type="int">3</rotationAutoPilotButton>
    </control-JOYSTICK>

    <control-XBOX>
        <controllerPort type="int">1</controllerPort>
        <xAxisPort type="int">4</xAxisPort>
        <yAxisPort type="int">5</yAxisPort>
        <zAxisPort type="int">0</zAxisPort>

        <pilotControllerXAxisSensitivity>80</pilotControllerXAxisSensitivity>
        <pilotControllerYAxisSensitivity>-100</pilotControllerYAxisSensitivity>
        <pilotControllerZAxisSensitivity>-60</pilotControllerZAxisSensitivity>
        <!-- the minimum amount of stick input to respond to, in percentage -->
        <pilotStickThresholdWhenOtherAxisUnused>5</pilotStickThresholdWhenOtherAxisUnused>
        <pilotStickThresholdWhenOtherAxisFull>15</pilotStickThresholdWhenOtherAxisFull>
        <pilotTranslationalAxisExponent>1.6</pilotTranslationalAxisExponent>
        <pilotRotationalAxisExponent>1.8</pilotRotationalAxisExponent>

        <translationAutoPilotButton type="int">6</translationAutoPilotButton>
        <lockChassisButtonPort type="int">10</lockChassisButtonPort>
        <rotationAutoPilotButton type="int">5</rotationAutoPilotButton>
    </control-XBOX>
</robotConfig>